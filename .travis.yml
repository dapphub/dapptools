os:
  - linux
  - osx
language: nix
sudo: required
# workaround for a macOS specific issue with trusted users
before_install:
  - sudo mkdir -p /etc/nix
  - echo "trusted-users = root $USER" | sudo tee -a /etc/nix/nix.conf
  - echo "substituters = https://cache.nixos.org https://d121dybo9yhl5h.cloudfront.net" | sudo tee -a /etc/nix.nix.conf
  - echo "trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= d121dybo9yhl5h.cloudfront.net-1:IOpHdUBT2b3fIRb/TBm+V8Y8eEj52fStcllzD6TFYyU=" | sudo tee -a /etc/nix/nix.conf
  - sudo launchctl kickstart -k system/org.nixos.nix-daemon || true
install:
  - nix-env -if https://github.com/cachix/cachix/tarball/master --substituters https://cachix.cachix.org --trusted-public-keys cachix.cachix.org-1:eWNHQldwUO7G2VkjpnjDbWwy4KQ/HNxht7H4SSoMckM=
  - cachix use dapp
script:
  - cachix push --watch-store dapp &
  - |
    PLATFORM=linux

    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PLATFORM=darwin; fi

    # the additional call to `cachix push` is there to prevent a race condition
    # that happens when the above daemon is killed mid-push at the end of this
    # script.
    nix-build -j auto release.nix -A dapphub.$PLATFORM.stable | cachix push dapp
after_success:
  - |
    COMMIT_HASH=$(echo $TRAVIS_COMMIT | cut -c 1-8)

    # Only run this on Linux to avoid announcing to the channel twice.
    # Using build stages is another option but is inefficient because it requires initialization of an additional VM.
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      nix run nixpkgs.httpie -c \
      http -f https://dapphub.chat/api/v1/chat.postMessage \
        X-Auth-Token:"$CHAT_AUTH_TOKEN" \
        X-User-Id:"$CHAT_USER_ID" \
        channel=#dev-announce \
        text=":construction_site: Nix build of dapptools [$COMMIT_HASH](https://github.com/dapphub/dapptools/commit/$COMMIT_HASH) (branch \`$TRAVIS_BRANCH\`) finished; binaries for GNU/Linux and Darwin uploaded to Cachix."
    fi

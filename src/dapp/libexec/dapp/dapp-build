#!/usr/bin/env bash
### dapp-build -- compile the source code
### Usage: dapp build [--extract]
###
###  --extract:  After building, write the .abi, .bin and .bin-runtime
###              files from the solc json into $DAPP_OUT. Beware of contract
###              name collisions. This is provided for compatibility with older
###              workflows.
###  --optimize: activate the solidity optimizer.
###  --legacy:   Compile using the `--combined-json` flag. Some options are
###              missing from this format. This is provided for compatibility with older
###              workflows.
set -e

while [[ $# -gt 0 ]]; do
  opt=$1; shift
  case $opt in
    --extract)
      DAPP_BUILD_EXTRACT=1
      ;;
    --optimize)
      DAPP_BUILD_OPTIMIZE=1
      ;;
    --legacy)
      DAPP_BUILD_LEGACY=1
      ;;
    *)
      info "unknown argument: $opt"
      exit 1
      ;;
  esac
done

info() {
  while [[ $# -gt 0 ]]; do
    opt=$1; shift
    case $opt in
      -*)
        FLAGS=$opt;
        ;;
      *)
        ARGS=$opt;
        ;;
    esac
  done
  echo >&2 "$FLAGS" "${0##*/}: $ARGS"
}

cd "$DAPP_ROOT"

# use a custom path is DAPP_SOLC is set
export SOLC=${DAPP_SOLC:-solc}

if [ "$DAPP_LINK_TEST_LIBRARIES" = 1 ]; then
    sender=0x00a329c0648769a73afac7f9381e08fb43dbea72
    nonce=48576
    mapfile -t libraries < <(dapp --find-libraries)

    if [[ ${#libraries[@]} -eq 0 ]]; then exit; fi

    info "building with linked libraries"
    for lib in "${libraries[@]}"; do
        address=$(dapp address "$sender" "$nonce")
        links+=" $lib:$address"
        ((nonce++))
    done
else
    (set -x; dapp clean)
fi

remappings=$(dapp remappings)

export DAPP_LIBRARIES=${DAPP_LIBRARIES-"$links"}
export DAPP_REMAPPINGS=${DAPP_REMAPPINGS-"$remappings"}
export DAPP_BUILD_OPTIMIZE
export DAPP_BUILD_EXTRACT
export -f info

mkdir -p "$DAPP_OUT"

if [[ -z "$DAPP_BUILD_LEGACY" && -z "$DAPP_BUILD_EXTRACT" ]]; then

    if [[ "$DAPP_STANDARD_JSON" ]]; then
        $<("$DAPP_STANDARD_JSON") | "$SOLC" --standard-json --allow-paths . > "$DAPP_JSON"
    else
        dapp mk-standard-json | "$SOLC" --standard-json --allow-paths . > "$DAPP_JSON"
    fi

    # pipe errors to stderr
    jq -r '.errors | map(."formattedMessage") | @sh' "$DAPP_JSON" | sed -e "s/' //g" -e "s/'//g" 1>&2
    # if sources is empty, the compilation failed
    [[ $(jq -r '.sources' "$DAPP_JSON") = "{}" ]] && exit 1 || exit 0

else
    info "warning: legacy builds are deprecated and might not work with other dapp commands"
    dapp build-legacy
fi

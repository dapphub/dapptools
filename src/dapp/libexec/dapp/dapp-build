#!/usr/bin/env bash
### dapp-build -- compile the source code
### Usage: dapp build
set -e

IFS=" " read -r -a opts <<<"$SOLC_FLAGS"
json_opts=--combined-json=abi,bin,bin-runtime,srcmap,srcmap-runtime,ast
solc --help | grep -q -- --overwrite && opts+=(--overwrite)

remappings=$(dapp remappings)
if [[ $remappings ]]; then
  while read -r line; do opts+=("$line"); done <<<"$remappings"
fi

if [ "$DAPP_LINK_TEST_LIBRARIES" = 1 ]; then
  DAPP_LINK_TEST_LIBRARIES=0 dapp build
  sender=0x00a329c0648769a73afac7f9381e08fb43dbea72
  nonce=1048576
  mapfile -t libraries < <(dapp --find-libraries)

  if [[ ${#libraries[@]} -eq 0 ]]; then exit; fi

  echo >&2 "${0##*/}: rebuilding with linked libraries"
  for lib in "${libraries[@]}"; do
    address=$(dapp address "$sender" "$nonce")
    links+=" $lib:$address"
    ((nonce++))
  done
  opts+=(--libraries "$links")
else
  (set -x; dapp clean)
fi

find "${DAPP_SRC}" -name '*.sol' | while read -r x; do
  dir=${x%\/*}
  dir=${dir#$DAPP_SRC}
  dir=${dir#/}
  mkdir -p "$DAPP_OUT/$dir"
  (set -x; solc "${opts[@]}" --abi --bin --bin-runtime --metadata /=/ -o "$DAPP_OUT/$dir" "$x")
  json_file=$DAPP_OUT/$dir/${x##*/}.json
  (set -x; solc "${opts[@]}" "${json_opts[@]}" /=/ "$x" >"$json_file")
done

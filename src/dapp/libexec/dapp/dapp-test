#!/usr/bin/env bash
### dapp-test -- run the test suite
### Usage: dapp test [<options>]
###
### Options:
###   -v, --verbose             trace ouput for failing tests
###   -vv                       trace output for all tests including passes
###   --fuzz-runs <number>      number of times to run fuzzing tests
###   --replay <string>         rerun a particular test case
###   -m, --match <string>      only run test methods matching regex
###
### RPC options:
###   --rpc                     fetch remote state via ETH_RPC_URL
###   --rpc-url <url>           fetch remote state via <url>
###   --rpc-block <number>      block number (latest if not specified)
###
### SMT options:
###   --smttimeout <number>     timeout passed to the smt solver in ms (default 30000)
###   --solver <string>         name of the smt solver to use (either "z3" or "cvc4")
###   --max-iterations <number> number of times we may revisit a particular branching point
set -e
have() { command -v "$1" >/dev/null; }

cd "$DAPP_ROOT"

have hevm || {
  echo >&2 "${0##*/}: error: \`hevm' not found"
  echo >&2 "${0##*/}: error: please install it and try again"
  exit 1
}

if ! [[ $DAPP_SKIP_BUILD ]] ; then
  DAPP_LINK_TEST_LIBRARIES=1 dapp build || exit
fi

if [ "$DAPP_VERBOSE" ]; then set -x; fi

state=$(dapp --make-library-state)
function clean() { rm -rf "$state"; }
trap clean EXIT

opts=$(dapp --hevm-opts "$0" "$@")
# shellcheck disable=SC2068
# make sure git commits succeed
export GIT_CONFIG_NOSYSTEM=1
export GIT_AUTHOR_NAME=hevm
export GIT_AUTHOR_EMAIL=hevm@dapphub.com
export GIT_COMMITTER_NAME=$GIT_AUTHOR_NAME
export GIT_COMMITTER_EMAIL=$GIT_AUTHOR_EMAIL

hevm dapp-test --dapp-root="${DAPP_ROOT}" --json-file="${DAPP_JSON}" --state="$state" ${opts[@]}

#!/usr/bin/env bash
set -e

OPTS="dapp testnet [<options>] <args>...
dapp testnet --help
--
rpc-port=port      change RPC port (default: 8545)
chain-id=number    change chain ID (default: 99)
period=seconds     use a block time instead of instamine
accounts=number    create multiple accounts (default: 1)
save=name          after finishing, save snapshot
load=name          start from a previously saved snapshot
dir=directory      testnet directory
"

eval "$(
  git rev-parse --parseopt -- "$@" <<<"$OPTS" || echo exit $?
)"

RPC_PORT=8545
PERIOD=0
CHAINID=99
ACCOUNTS=0
gethdir=$HOME/.dapp/testnet

while [[ $1 ]]; do
  case $1 in
    --)          shift; break;;
    --rpc-port)  shift; RPC_PORT=$1;;
    --chain-id)  shift; CHAINID=$1;;
    --period)    shift; PERIOD=$1;;
    --accounts)  shift; ACCOUNTS=$(($1 - 1));;
    --save)      shift; SAVE=$1;;
    --load)      shift; LOAD=$1;;
    --dir)       shift; gethdir=$1;;
    *) printf "${0##*/}: internal error: %q\\n" "$1"; exit 1
  esac; shift
done

chaindir=$gethdir/$RPC_PORT

if [[ $LOAD ]]; then
  mkdir -p "$chaindir"
  cp -r "$gethdir/snapshots/$LOAD"/{keystore,config} "$chaindir"
  geth >/dev/null 2>&1 --datadir "$chaindir" init "$chaindir/config/genesis.json"
  geth >/dev/null 2>&1 --datadir "$chaindir" import "$gethdir/snapshots/$LOAD/backup"
  keys=$(jq <"$chaindir/config/genesis.json" -r '.alloc | keys | join(" ")')
  IFS=" " read -r -a address <<< "$keys"
  CHAINID=$(jq <"$chaindir/config/genesis.json" -r ".config.chainId")
else
  while true; do
    if [[ ! -d "$gethdir/$CHAINID" ]]; then break; fi
    CHAINID=$((CHAINID + 1))
  done

  mkdir -p "$chaindir/config"
  for i in $(seq 0 "$ACCOUNTS"); do
    address+=( "$(
      geth 2>/dev/null account new --datadir "$chaindir" --password=<(exit) 2>/dev/null \
        | grep -o -E "0x[A-Fa-f0-9]*" )" )
    balance+=(-n {} -s "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" -i balance \
      -i "${address[i]}")
  done
  jshon >"$chaindir/config/genesis.json" \
    -n {} \
    -n {} \
      -n "$CHAINID" -i chainId \
      -n 0 -i homesteadBlock \
      -n 0 -i eip150Block \
      -n 0 -i eip155Block \
      -n 0 -i eip158Block \
      -n 0 -i eip160Block \
      -n 0 -i byzantiumBlock \
      -n 0 -i constantinopleBlock \
      -n 0 -i petersburgBlock \
      -n 0 -i istanbulBlock \
      -n {} -n "$PERIOD" -i period -n 3000 -i epoch -i clique \
      -i config \
    -s 0x1 -i difficulty \
    -s 0xffffffffffffffff -i gaslimit \
    -s "0x3132333400000000000000000000000000000000000000000000000000000000""${address[0]#0x}""0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" -i extraData \
    -n {} \
      "${balance[@]}" \
    -i alloc
  geth 2>/dev/null --datadir "$chaindir" init "$chaindir/config/genesis.json"
fi

export ETH_RPC_URL=http://127.0.0.1:$RPC_PORT

port=$((RPC_PORT + 30000))

echo >&2 "dapp-testnet:   RPC URL: $ETH_RPC_URL"
echo >&2 "dapp-testnet:  TCP port: $port"
echo >&2 "dapp-testnet:  Chain ID: $CHAINID"
echo >&2 "dapp-testnet:  Database: $chaindir"
echo >&2 "dapp-testnet:  Geth log: $chaindir/geth.log"

printf "%s\n" "${address[@]}" > "$chaindir/config/account"
echo "$ETH_RPC_URL"           > "$chaindir/config/rpc-url"
echo "$port"                  > "$chaindir/config/node-port"

set +m
geth \
  2> >(tee "$chaindir/geth.log" | grep --line-buffered Success | sed 's/^/geth: /' >&2) \
  --datadir "$chaindir" --networkid "$CHAINID" --port="$port" \
  --mine --minerthreads=1 --allow-insecure-unlock \
  --rpc --rpcapi "web3,eth,net,debug,personal" --rpccorsdomain '*' --nodiscover \
  --rpcport="$RPC_PORT" --unlock="$(IFS=,; echo "${address[*]}")" --password=<(exit) &

gethpid=$!

clean() {
  ( set -x; kill -INT $gethpid; wait )
  if [[ $SAVE ]]; then
    echo >&2 "dapp-testnet: saving $gethdir/snapshots/$SAVE"
    mkdir -p "$gethdir/snapshots/$SAVE"
    cp -r "$chaindir/keystore" "$gethdir/snapshots/$SAVE"
    cp -r "$chaindir/config" "$gethdir/snapshots/$SAVE"
    geth >/dev/null 2>&1 --datadir "$chaindir" \
       export "$gethdir/snapshots/$SAVE/backup"
  fi
  ( set -x; rm -rf "$chaindir" )
}
trap clean EXIT

until curl -s "$ETH_RPC_URL"; do sleep 1; done

ETH_FROM=$(seth --rpc-url="$ETH_RPC_URL" rpc eth_coinbase)
export ETH_FROM
export ETH_KEYSTORE=$chaindir/keystore
export ETH_PASSWORD=/dev/null
printf 'dapp-testnet:   Account: %s (default)\n' "${address[0]}" >&2
[[ "${#address[@]}" -gt 1 ]] && printf 'dapp-testnet:   Account: %s\n' "${address[@]:1}" >&2

if [[ $1 ]]; then
  "$@"
else
  while true; do sleep 3600; done
fi

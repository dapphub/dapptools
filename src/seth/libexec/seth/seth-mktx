#!/usr/bin/env bash
### seth-mktx -- construct a signed transaction using ethsign
### Usage: seth mktx [<opts>] [-F <from>] <to> <sig> [<args>]
###    or: seth mktx [<opts>] [-F <from>] <to> <calldata>
set -e

# shellcheck disable=SC2015
[[ $# ]] && [[ $ETH_FROM ]] || seth --fail-usage "$0"

value=$(seth --to-wei "${ETH_VALUE:-0}")
value=$(seth --to-hex "$value")
if [[ $2 ]]; then
  data=$(seth calldata "${@:2}")
fi

data=${data:-0x}

if [[ -z "$ETH_GAS" ]]; then
  jshon+=(-n {})
  [[ $TO ]] && jshon+=(-s "$TO" -i to)
  jshon+=(-s "$data" -i data)
  # shellcheck disable=SC2207
  jshon+=($(SETH_PARAMS_NO_GAS=1 seth --send-params))
  jshon+=(-i append)
  [[ $ETH_BLOCK = [0-9]* ]] && ETH_BLOCK=$(seth --to-hex "$ETH_BLOCK")
  : "${ETH_BLOCK:=latest}" # geth doesn't like this argument
  [[ $ETH_BLOCK = latest ]] || jshon+=(-s "$ETH_BLOCK" -i append)
  ETH_GAS=$(seth rpc eth_estimateGas -- "${jshon[@]}")
fi

args=(
  --from "$(seth --to-address "$ETH_FROM")"
  --nonce "${ETH_NONCE:-$(seth nonce "$ETH_FROM")}"
  --chain-id "$(seth chain-id)"
  --gas-price "${ETH_GAS_PRICE:-$(seth gas-price)}"
  --gas-limit "$ETH_GAS"
  --value "$value"
  --data "$data"
)

if [[ $SETH_CREATE ]]; then
  args+=(--create)
else
  args+=(--to "$(seth --to-address "$1")")
fi

if [[ $ETH_PRIO_FEE ]]; then
  args+=(--prio-fee "$ETH_PRIO_FEE")
fi

if [ -n "$ETH_PASSWORD" ]; then args+=(--passphrase-file "$ETH_PASSWORD"); fi

tx=$([[ $SETH_VERBOSE ]] && set -x; ethsign tx "${args[@]}")
echo "$tx"
